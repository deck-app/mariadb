name: MariaDB

on:
  schedule:
  - cron:  '30 22 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  MariaDB-AMD64:
    strategy:
      matrix:
        mv: ["10.7", "10.6", "10.5"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image Mariadb ${{ matrix.mv }}
        run: docker-compose -f "docker-compose.yml" up -d --build
        env:
          DB_ROOT_PASSWORD: password
          DB_PASSWORD: password
          DB_USER: admin
          DB_NAME:  test
          MARIADB_VERSION: ${{ matrix.mv }}
          DATA_PATH_HOST: /tmp/db
      - name: Verify MariaDB running from host, create Database and show Database
        run: |
          while ! docker exec mariadb_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
              echo "Waiting for database connection..."
              sleep 2
          done
      - name: Check MariaDB version
        run:  docker exec mariadb_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
      - name: Verify MariaDB database from user
        run:  docker exec mariadb_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
      - name: Create a Database
        run:  docker exec mariadb_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
      - name: Verify Database create or not
        run:  docker exec mariadb_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
      # - name: Database connection check
      #   run: |
      #     docker exec mariadb_phpmyadmin_1 wget -O /var/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
      #     docker exec mariadb_phpmyadmin_1 php /var/db.php
      - name: Docker Image Down and data deleted
        run:  |
          docker-compose -f "docker-compose.yml" down
          sudo rm -rf /tmp/db
          echo "y" | docker image prune -a
          echo "y" | docker volume prune
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: github_action_status
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content MariaDB ${{ matrix.mv }} AMD64 :rocket:'
          SLACK_TITLE: Post Title
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  MariaDB-ARM64:
    strategy:
      matrix:
        mv: ["10.7", "10.6", "10.5"]
    runs-on: ubuntu-22.04
    name: MariaDB-ARM64
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
      - name: Build the Docker image Mariadb ${{ matrix.mv }}
        run: docker-compose -f "docker-compose.yml" up -d --build
        env:
          DB_ROOT_PASSWORD: password
          DB_PASSWORD: password
          DB_USER: admin
          DB_NAME:  test
          MARIADB_VERSION: ${{ matrix.mv }}
          DATA_PATH_HOST: /tmp/db
      - name: Verify MariaDB running from host, create Database and show Database
        run: |
          while ! docker exec mariadb_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
              echo "Waiting for database connection..."
              sleep 2
          done
      - name: Check MariaDB version
        run:  docker exec mariadb_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
      - name: Verify MariaDB database from user
        run:  docker exec mariadb_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
      - name: Create a Database
        run:  docker exec mariadb_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
      - name: Verify Database create or not
        run:  docker exec mariadb_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
      # - name: Database connection check
      #   run: |
      #     docker exec mariadb_phpmyadmin_1 wget -O /var/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
      #     docker exec mariadb_phpmyadmin_1 php /var/db.php
      - name: Docker Image Down and data deleted
        run:  |
          docker-compose -f "docker-compose.yml" down
          sudo rm -rf /tmp/db
          echo "y" | docker image prune -a
          echo "y" | docker volume prune
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: github_action_status
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content MariaDB ${{ matrix.mv }} ARM64 :rocket:'
          SLACK_TITLE: Post Title
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
